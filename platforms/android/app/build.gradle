apply plugin: 'com.android.application'

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        applicationId "com.ucar.wxd"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode 1
        versionName "1.1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "x86"
            abiFilters "armeabi"
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "88151d30044e75e5d4255525", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }
    signingConfigs {
        release {
            storeFile file("tools/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        debug {
            storeFile file("tools/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }
    buildTypes {
        release {
            manifestPlaceholders = [
                    JPUSH_PKGNAME: defaultConfig.applicationId,
                    JPUSH_APPKEY : "8d3ac0df337a81defc7b4997", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
            ]
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            manifestPlaceholders = [
                    JPUSH_PKGNAME: defaultConfig.applicationId,
                    JPUSH_APPKEY : "88151d30044e75e5d4255525", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
            ]
            testCoverageEnabled true
            signingConfig signingConfigs.debug
        }
    }
    sourceSets {
        main {
            java {
                srcDirs = ["src/main/java", "src/main/java_zxing"];
                jniLibs.srcDirs = ['libs']
            }
        }
    }
    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
    testOptions {
        reportDir = "$project.buildDir/test/report"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}
repositories{
    dependencies {
        compile fileTree(include: ['*.jar'], dir: 'libs')

        //weex 依赖 Android SDK version > 23
        compile "com.facebook.fresco:fresco:0.10.0"
        compile "com.android.support:appcompat-v7:23.1.1"
        compile "com.android.support:recyclerview-v7:23.1.1"
        compile "com.android.support:support-v4:23.1.1"
        compile "com.alibaba:fastjson:1.1.46.android"
        //weex chrome 调试相关 debug引入
        debugCompile 'com.google.code.findbugs:jsr305:2.0.1'
        debugCompile 'com.squareup.okhttp:okhttp:2.3.0'
        debugCompile 'com.squareup.okhttp:okhttp-ws:2.3.0'
        debugCompile 'com.taobao.android:weex_inspector:0.10.0.5'
        debugCompile 'com.journeyapps:zxing-android-embedded:3.4.0'
//        //ucar weexsdk拓展
        compile 'com.ucar:weexext_sdk:2.0.2@aar'
         compile 'com.ucar:weex_sdk:1.6@aar'
//        //taobao weexsdk
//        compile 'com.taobao.android:weex_sdk:0.10.0@aar'


        compile 'com.squareup.okhttp3:okhttp:3.8.1'
//        compile project(':weex-sdk16')
//        compile project(':uwx')



    }
    flatDir{
        dirs 'libs'
    }
}

